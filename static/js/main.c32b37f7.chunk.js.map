{"version":3,"sources":["components/FilterForm.js","components/EpisodTable.js","components/Pagination.js","components/EpisodInfo.js","store/index.js","components/Episodes.js","index.js"],"names":["observer","filter","className","Input","type","name","placeholder","onChange","e","target","value","tableHeadNames","id","field","episodesjs","setModalEpisode","getMoreInfo","Table","TableHead","TableRow","map","item","TableCell","key","TableBody","results","num","onClick","url","episode","CircularProgress","prevPage","nextPage","page","Grid","length","info","prev","Button","next","openEpisodjs","charactersjs","air_date","Card","CardHeader","avatar","Avatar","alt","src","image","title","subheader","species","Store","episodes","filterEpisodes","openEpisod","characters","this","axios","get","then","response","setEpisodes","data","result","getEpisodes","setOpenEpisod","charArr","push","setTimeout","filterInput","toLowerCase","displayEpisods","toJS","el","indexOf","showFilteEpisods","decorate","observable","action","bound","filterEpisods","store","useEffect","useState","modalEpisode","Dialog","open","aria-labelledby","DialogTitle","Typography","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c32b37f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst FilterForm = ({filter}) => {\r\n\r\n    return <div className=\"w200\">\r\n        <Input            \r\n            type=\"filter\"\r\n            name=\"filter\"\r\n            placeholder=\"название серии\"\r\n            onChange={(e)=>filter(e.target.value)}\r\n        />\r\n    </div>;\r\n};\r\n\r\nexport default observer(FilterForm);","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst tableHeadNames = [\r\n    { id: 'id', field: 'Номер серии' },\r\n    { id: 'name', field: 'Название серии' },\r\n    { id: 'surname', field: 'епизод' },\r\n];\r\n\r\nconst EpisodTable = ({episodesjs, setModalEpisode, getMoreInfo}) => {\r\n\r\n    return <div >\r\n        <Table>\r\n            <TableHead >\r\n                <TableRow className='tableHead'>\r\n                    {tableHeadNames.map(item => (\r\n                        <TableCell key={item.id}>\r\n                            {item.field}\r\n                        </TableCell>\r\n                    ))}\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {episodesjs ?\r\n                    episodesjs.results.map((item, num) => (\r\n                        <TableRow className=\"episode\" key={item.id} onClick={() => { setModalEpisode(true); getMoreInfo(item.url) }}>\r\n                            <TableCell >Серия {item.id}</TableCell>\r\n                            <TableCell >{item.name}</TableCell>\r\n                            <TableCell >{item.episode}</TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                    : <CircularProgress />}\r\n            </TableBody>\r\n        </Table>\r\n    </div>;\r\n};\r\n\r\nexport default observer(EpisodTable);","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Pagination = ({ episodesjs, prevPage, nextPage, page }) => {\r\n\r\n    return <div >\r\n        <Grid>\r\n            {episodesjs ? episodesjs.results.length >= 16 ?\r\n                episodesjs.info.prev ? <Button className=\"fl-Left\" onClick={() => prevPage(page)}>предыдущая страница</Button> : null : null : null}\r\n\r\n            {episodesjs ? episodesjs.results.length >= 20 ?\r\n                episodesjs.info.next ? <Button className=\"fl-right\" onClick={() => nextPage(page)}>следующая страница</Button> : null : null : null}\r\n        </Grid>\r\n    </div>;\r\n};\r\n\r\nexport default observer(Pagination);","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst EpisodInfo = ({openEpisodjs, charactersjs}) => {\r\n\r\n    return <div >\r\n        <Grid className=\"episodModal\">\r\n            <Grid>Название серии: {openEpisodjs.name}</Grid>\r\n            <Grid>Дата выхода в эфир: {openEpisodjs.air_date}</Grid>\r\n            <Grid>Персонажи: </Grid>\r\n            {charactersjs.map((item, num) => (\r\n                <Card key={num}>\r\n                    <CardHeader\r\n                        avatar={<Avatar alt={item.name} src={item.image} />}\r\n                        title={item.name}\r\n                        subheader={item.species}\r\n                    />\r\n                </Card>\r\n            ))}\r\n        </Grid>\r\n    </div>;\r\n};\r\n\r\nexport default observer(EpisodInfo);","import { decorate, observable, action } from 'mobx';\r\nimport axios from 'axios';\r\nimport { toJS } from 'mobx';\r\n\r\nclass Store {\r\n    episodes = null;\r\n    filterEpisodes = null;\r\n    page = 1;\r\n    openEpisod = null;\r\n    characters = [];\r\n\r\n    getEpisodes() {\r\n        const url = `https://rickandmortyapi.com/api/episode?page=${this.page}`;\r\n        axios.get(url)\r\n            .then((response) => {\r\n                this.setEpisodes(response.data);\r\n            })\r\n\r\n    }\r\n\r\n    setEpisodes(result) {\r\n        this.episodes = result;\r\n        this.filterEpisodes = result;\r\n    }\r\n\r\n    nextPage(page) {\r\n        this.page = page + 1;\r\n        this.getEpisodes()\r\n    }\r\n\r\n    prevPage(page) {\r\n        this.page = page - 1;\r\n        this.getEpisodes()\r\n    }\r\n\r\n    getMoreInfo(url) {\r\n        axios.get(url)\r\n            .then((response) => {\r\n                this.setOpenEpisod(response.data);\r\n            })\r\n    }\r\n\r\n    setOpenEpisod(result) {\r\n\r\n        this.openEpisod = result;\r\n        let charArr = [];\r\n\r\n        result.characters.map((item) => (\r\n            axios.get(item)\r\n                .then((response) => {\r\n                    charArr.push(response.data);\r\n                })\r\n        ));\r\n\r\n        setTimeout(() => { this.characters = charArr; }, 1000);\r\n    }\r\n\r\n    filterEpisods(value) {\r\n\r\n        let filterInput = value.toLowerCase(); \r\n        let filterEpisodes = toJS(this.filterEpisodes); \r\n        let displayEpisods = filterEpisodes.results.filter((el)=>{\r\n            let filterValue = el.name.toLowerCase();\r\n            return filterValue.indexOf(filterInput) !== -1;\r\n        });\r\n        \r\n        this.showFilteEpisods(displayEpisods);\r\n    }\r\n\r\n    showFilteEpisods(displayEpisods) {\r\n       this.episodes.results = displayEpisods;\r\n    }\r\n}\r\n\r\n\r\n\r\nStore = decorate(Store, {\r\n    episodes: observable,\r\n    page: observable,\r\n    openEpisod: observable,\r\n    characters: observable,\r\n    getEpisodes: action.bound,\r\n    setEpisodes: action,\r\n    nextPage: action.bound,\r\n    prevPage: action.bound,\r\n    getMoreInfo: action.bound,\r\n    setOpenEpisod: action.bound,\r\n    filterEpisods: action.bound,\r\n    showFilteEpisods: action.bound,\r\n});\r\n\r\nexport default new Store();\r\n","import React, { useEffect, useState } from 'react';\r\nimport { toJS } from 'mobx';\r\n\r\nimport FilterForm from './FilterForm';\r\nimport EpisodTable from './EpisodTable';\r\nimport Pagination from './Pagination';\r\nimport EpisodInfo from './EpisodInfo';\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nimport store from '../store';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst Episodes = () => {\r\n    const { episodes, getEpisodes, prevPage, nextPage, page, getMoreInfo, openEpisod, characters, filterEpisods } = store;\r\n\r\n    useEffect(() => {\r\n        getEpisodes();\r\n    }, [getEpisodes]);\r\n\r\n    const [modalEpisode, setModalEpisode] = useState(false);\r\n\r\n    const episodesjs = toJS(episodes);\r\n    const openEpisodjs = toJS(openEpisod);\r\n    const charactersjs = toJS(characters);\r\n\r\n   \r\n\r\n    return <div>\r\n        <Grid className=\"filter\">\r\n            <Grid className=\"filter_container\">\r\n                <FilterForm filter={(value) => filterEpisods(value)} />\r\n            </Grid>\r\n        </Grid>\r\n        <Grid className=\"root\">\r\n            <EpisodTable episodesjs={episodesjs}  setModalEpisode={(value) => setModalEpisode(value)} getMoreInfo={(value) => getMoreInfo(value)}/>\r\n            <Pagination episodesjs={episodesjs} prevPage={prevPage} nextPage={nextPage} page={page}/>\r\n\r\n            <Dialog\r\n                open={modalEpisode}\r\n                aria-labelledby=\"modal-episode\"\r\n            >\r\n                {openEpisodjs ? <EpisodInfo openEpisodjs={openEpisodjs} charactersjs={charactersjs} /> : <CircularProgress />}\r\n                <DialogTitle id=\"modal-episode\">\r\n                    <Typography ><Button onClick={() => setModalEpisode(false)}> CLOSE </Button></Typography>\r\n                </DialogTitle>\r\n            </Dialog>\r\n\r\n        </Grid>\r\n    </div >;\r\n};\r\n\r\nexport default observer(Episodes);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Episodes from './components/Episodes';\nimport './index.css';\n\nReactDOM.render(\n    <Episodes />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}